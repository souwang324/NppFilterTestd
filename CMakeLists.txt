CMAKE_MINIMUM_REQUIRED(VERSION 3.8)
SET(TARGET NppFilterTestd)
PROJECT(${TARGET})
SET(EXVAR ${TARGET})
FIND_PACKAGE(CUDA REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)
SET(CUDA_PATH $ENV{CUDA_PATH})
SET(OPENCV_DIR $ENV{OPENCV_DIR})
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
SET(CUDA_NVCC_FLAGS ${CUDA_NVCC_FLAGS})
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${CUDA_PATH}/include)
INCLUDE_DIRECTORIES(${CUDA_PATH}/cuda-samples-master/Common)
LINK_DIRECTORIES(${CUDA_PATH})
LINK_DIRECTORIES(${OPENCV_DIR})
SET(MYNPPLIB  nppc.lib nppial.lib nppicc.lib nppidei.lib nppif.lib nppig.lib nppim.lib nppist.lib nppisu.lib nppitc.lib npps.lib)
#SET(MYLIBS cusolver.lib cublas.lib ${MYNPPLIB})
SET(MYLIBS ${MYNPPLIB})
SET(INCREMENT 0)
FOREACH (mylib ${MYLIBS})
	SET(FOUND_LIB "VAR${INCREMENT}")
	FIND_LIBRARY(${FOUND_LIB} NAME ${mylib} PATHS ${CUDA_PATH}/lib/x64)
	LIST(APPEND APPENDLIBS ${${FOUND_LIB}})
	MESSAGE("FOUND_LIB: ${${FOUND_LIB}}")
	MESSAGE("APPENDLIBS: ${APPENDLIBS}")
	math(EXPR INCREMENT "${INCREMENT}+1")
	UNSET(FOUND_LIB)
ENDFOREACH(mylib)
file(GLOB SOURCES_FILES ${PROJECT_SOURCE_DIR}/src/*.cu ${PROJECT_SOURCE_DIR}/src/*.cpp ${PROJECT_SOURCE_DIR}/src/*.h)
CUDA_ADD_EXECUTABLE(${EXVAR} 
					${SOURCES_FILES}) 
TARGET_LINK_LIBRARIES(${EXVAR} ${CUDA_cudadevrt_LIBRARY})
TARGET_LINK_LIBRARIES(${EXVAR} ${OpenCV_LIBS})
TARGET_LINK_LIBRARIES(${EXVAR} ${APPENDLIBS})